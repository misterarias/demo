TOPDIR?=$(shell pwd)
RPMOUTDIR=$(TOPDIR)/dest/
RPMBUILDDIR=$(RPMOUTDIR)/core-root
DOCKERDIR=$(TOPDIR)
FOLDERS=lib conf scripts functions/RequestEvents functions/HDFS \
				data-analysis/analytics data-analysis/cleaning
FILES=RELEASE.txt
BLUECOLOR=\\033[1;34m
GREENCOLOR=\\033[1;32m
REDCOLOR=\\033[1;31m
ENDCOLOR=\\033[39;0m
MAKE=make -s
CLEANUP=test.out
CORE_OUTDIR=/var/lib/jobrunner

help:
	@echo  "\n${GREENCOLOR}Useful targets${ENDCOLOR}:"
	@echo  "${BLUECOLOR}make db_start${ENDCOLOR} # Create and start the local DB"
	@echo  "${BLUECOLOR}make db_stop${ENDCOLOR} # Stop DB"
	@echo  "---------------------------------------"
	@echo  "${BLUECOLOR}make tests${ENDCOLOR} # run all tests, do not stop on error"
	@echo  "${BLUECOLOR}make tests-failfast${ENDCOLOR} # Runs all tests stopping on first error, so files can be diff'ed with the provided command"
	@echo  "---------------------------------------"
	@echo  "${BLUECOLOR}make rpm-qa${ENDCOLOR} # Cleans, tests and builds the RPM for the QA environment"
	@echo  "${BLUECOLOR}make rpm-prod${ENDCOLOR} # Cleans, tests and builds the RPM for the PROD environment"
	@echo  "${BLUECOLOR}make clean${ENDCOLOR} # Remove intermediate files generated by the RPM builder"

clean:
	@docker run -v "$(RPMOUTDIR):/rpm-build" docker_rpmbuilder rm -rf /rpm-build  2> /dev/null;\
	rm -rf $(RPMOUTDIR) ;\
	rm -rf $(CLEANUP)

_install-%: tests clean
	@mkdir -p $(RPMOUTDIR); \
	for folder in $(FOLDERS); do \
		mkdir -p $(RPMBUILDDIR)${CORE_OUTDIR}/$$folder ;\
		cp -a $$folder/* $(RPMBUILDDIR)${CORE_OUTDIR}/$$folder/ ;\
	done ;\
	for file in $(FILES); do \
		cp -a $$file $(RPMBUILDDIR)${CORE_OUTDIR}/ ;\
	done;\
	mkdir -p $(RPMBUILDDIR)${CORE_OUTDIR}/environments/ ;\
	cp -a $(TOPDIR)/environments/$(subst _install-,,$@).conf $(RPMBUILDDIR)${CORE_OUTDIR}/environments/  # just copy the file for the environment we're deploying into

rpm-qa rpm-prod:
	@$(MAKE) _install-$(subst rpm-,,$@)
	@(cd $(DOCKERDIR) && docker-compose build rpmbuilder >/dev/null)
	@docker run \
		-v "$(RPMBUILDDIR):/root":Z \
		-v "$(TOPDIR)/devops/rpmtools/:/tmp":Z \
		-v "$(RPMOUTDIR):/rpm-build":Z \
		docker_rpmbuilder \
		rpmbuild -bb  --buildroot=/root --macros=/usr/lib/rpm/macros \
			--define 'environment $(subst rpm-,,$@)' \
			--define 'outdir ${CORE_OUTDIR}' \
			--define 'tag_version $(shell $(TOPDIR)/scripts/rpm/tag_version.sh)' \
			--define 'releases_count $(shell $(TOPDIR)/scripts/rpm/release_count.sh)' \
			/tmp/core.spec
	@if find $(RPMOUTDIR) -name "*.rpm" > /dev/null ; then \
		echo "Success! RPM can be found here:" && find $(RPMOUTDIR) -name "*.rpm"; \
	else \
		exit 1;\
	fi

tests:
	@echo "run tests here"
